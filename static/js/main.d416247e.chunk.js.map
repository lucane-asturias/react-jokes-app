{"version":3,"sources":["Joke.js","JokeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","handleClick","bind","length","getJokes","a","seenJokes","Set","map","j","numJokesToGet","config","headers","Accept","axios","get","res","has","data","joke","console","log","push","id","setState","st","setItem","stringify","alert","delta","sortedJokes","sort","b","src","handleVote","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d416247e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Joke.css\";\r\n\r\nclass Joke extends Component {\r\n\r\n    getColor() {\r\n        if(this.props.votes >= 15) {\r\n            return \"#4CAF50\";\r\n        } else if (this.props.votes >= 12) {\r\n            return \"#8BC34A\";\r\n        } else if (this.props.votes >= 9) {\r\n            return \"#CDDC39\";\r\n        } else if (this.props.votes >= 6) {\r\n            return \"#FFEB3B\";\r\n        } else if (this.props.votes >= 3) {\r\n            return \"#FFC107\";\r\n        } else if (this.props.votes >= 0) {\r\n            return \"#FF9800\";\r\n        } else {\r\n            return \"#F44336\";\r\n        }\r\n    }\r\n\r\n    getEmoji() {\r\n        if(this.props.votes >= 15) {\r\n            return \"em em-rolling_on_the_floor_laughing\";\r\n        } else if (this.props.votes >= 12) {\r\n            return \"em em-laughing\";\r\n        } else if (this.props.votes >= 9) {\r\n            return \"em em-smiley\";\r\n        } else if (this.props.votes >= 6) {\r\n            return \"em em-slightly_smiling_face\";\r\n        } else if (this.props.votes >= 3) {\r\n            return \"em em-neutral_face\";\r\n        } else if (this.props.votes >= 0) {\r\n            return \"em em-confused\";\r\n        } else {\r\n            return \"em em-angry\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Joke\">\r\n                <div className=\"Joke-buttons\">\r\n                    <i className=\"fas fa-arrow-up\" onClick={this.props.upvote} />\r\n                    <span className=\"Joke-votes\" style={{borderColor: this.getColor()}}>{this.props.votes}</span>\r\n                    <i className=\"fas fa-arrow-down\" onClick={this.props.downvote} /> \r\n                </div>\r\n                <div className=\"Joke-text\">{this.props.text}</div>\r\n                <div className=\"Joke-smiley\">\r\n                    <i className={this.getEmoji()} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Joke;","import React, { Component } from \"react\";\r\nimport Joke from \"./Joke\"\r\nimport axios from \"axios\";\r\nimport \"./JokeList.css\";\r\n\r\nclass JokeList extends Component {\r\n    static defaultProps = {\r\n        numJokesToGet: 10\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\" ), loading: false};\r\n        // this.seenJokes = new Set(this.state.jokes.map(j => j.text));\r\n        // console.log(this.seenJokes)\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    componentDidMount() {\r\n      if (this.state.jokes.length === 0) this.getJokes();  \r\n    }\r\n\r\n    async getJokes() {\r\n        try {\r\n        // Load Jokes\r\n            let jokes = []; //populating an empty array with jokes from res.data.joke\r\n            const seenJokes = new Set(this.state.jokes.map(j => j.text));\r\n            while(jokes.length < this.props.numJokesToGet) {\r\n                //setting header to \"Accept\"; this gives a json res (not the html version)\r\n                const config = { headers: { Accept: \"application/json\" } };   \r\n                let res = await axios.get(\"https://icanhazdadjoke.com/\", config);\r\n                if (!seenJokes.has(res.data.joke)) {    \r\n                    jokes.push({ id: res.data.id, text: res.data.joke, votes: 0});\r\n                } else {\r\n                    console.log(\"FOUND A DUPLICATE!\");\r\n                }\r\n            }\r\n            console.log(jokes);\r\n            this.setState(st => ({ \r\n                loading: false, jokes: [ ...st.jokes, ...jokes ] }),\r\n            () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n            );\r\n        } catch(e) {\r\n            alert(e);\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n  \r\n    handleVote(id, delta) {\r\n        this.setState(st => ({\r\n            //map over existing jokes in state and check each one if j.id is equal to id we looking for \r\n            jokes: st.jokes.map(j =>\r\n                j.id === id ? { ...j, votes: j.votes + delta } : j\r\n            )}),\r\n        () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n        );\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({ loading: true }, this.getJokes);\r\n    }\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='JokeList-spinner'>\r\n                    <i className='far fa-8x fa-laugh fa-spin' />\r\n                    <h1 className='JokeList-title'>Loading...</h1>\r\n                </div>\r\n          );\r\n        }\r\n        // let sortedJokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\r\n        //better approach (this way it won't mutate the state):\r\n        const sortedJokes = [ ...this.state.jokes ].sort((a, b) => b.votes - a.votes);\r\n        return (\r\n            <div className=\"JokeList\">\r\n            <div className=\"JokeList-sidebar\">\r\n                <h1 className=\"JokeList-title\">\r\n                    <span>Dad</span> Jokes\r\n                </h1>\r\n                <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" />\r\n                <button className='JokeList-getmore' onClick={this.handleClick}>\r\n                    Fetch Jokes\r\n                </button>\r\n            </div>\r\n                <div className=\"JokeList-jokes\">\r\n                    {sortedJokes.map(j => (\r\n                        <Joke \r\n                            key={j.id}  \r\n                            text={j.text} \r\n                            votes={j.votes} \r\n                            upvote={() => this.handleVote(j.id, 1)}\r\n                            downvote={() => this.handleVote(j.id, -1)}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JokeList;","import React, { Component } from \"react\";\nimport JokeList from './JokeList';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <JokeList />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}